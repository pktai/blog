{"componentChunkName":"component---src-templates-blog-post-js","path":"/Three-dots-(â€¦)-in-JavaScript/","webpackCompilationHash":"60d1e397b90f30dbed75","result":{"data":{"markdownRemark":{"html":"<p>In this article, we are going to discuss a feature introduced in ES6 that is spread operator and rest operator. ðŸ”¥ ðŸ”¥ ðŸ”¥\nI've become a big fan of the three dots that may change your style of solving the problem within JavaScript. We can use three dots â€¦ in two different ways as spread operator and rest operator.</p>\n<h2>Rest Parameters</h2>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascriptjavascript\"><code class=\"language-javascriptjavascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">myFunc</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">a<span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">,</span> <span class=\"token operator\">...</span>args</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 22</span>\n console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 98</span>\n console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>args<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// [43, 3, 26]</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">myFunc</span><span class=\"token punctuation\">(</span><span class=\"token number\">22</span><span class=\"token punctuation\">,</span> <span class=\"token number\">98</span><span class=\"token punctuation\">,</span> <span class=\"token number\">43</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">26</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>In myFunc's last parameter prefixed with â€¦ which will cause to all remaining arguments placed within the javascript array.</p>\n<p>Rest parameters can be destructured (arrays only), that means that their data can be unpacked into distinct variables.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascriptjavascript\"><code class=\"language-javascriptjavascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">myFunc</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token operator\">...</span><span class=\"token punctuation\">[</span>x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">,</span> z<span class=\"token punctuation\">]</span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> x <span class=\"token operator\">*</span> y<span class=\"token operator\">*</span> z<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token function\">myFunc</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>          <span class=\"token comment\">// NaN</span>\n<span class=\"token function\">myFunc</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span>    <span class=\"token comment\">// 6</span>\n<span class=\"token function\">myFunc</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 6 (fourth parameter is not destructured)</span></code></pre></div>\n<h2>Spread Operators âœ¨</h2>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascriptjavascript\"><code class=\"language-javascriptjavascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">myFunc</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">,</span> <span class=\"token operator\">...</span>params</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token comment\">// used rest operator here</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>params<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">var</span> inputs <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"a\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"b\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"c\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"d\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"e\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"f\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">myFunc</span><span class=\"token punctuation\">(</span><span class=\"token operator\">...</span>inputs<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// used spread operator here</span>\n<span class=\"token comment\">// \"a\"</span>\n<span class=\"token comment\">// \"b\"</span>\n<span class=\"token comment\">// [\"c\", \"d\", \"e\", \"f\"]</span></code></pre></div>\n<p>There have always been a variety of ways to combine arrays, but the spread operator gives use a new method for combining arrays:</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascriptjavascript\"><code class=\"language-javascriptjavascript\"><span class=\"token keyword\">const</span> featured <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'Deep Dish'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Pepperoni'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Hawaiian'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> specialty <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'Meatzza'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Spicy Mama'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Margherita'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> pizzas <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token operator\">...</span>featured<span class=\"token punctuation\">,</span> <span class=\"token string\">'veg pizza'</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">...</span>specialty<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>pizzas<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 'Deep Dish', 'Pepperoni', 'Hawaiian', 'veg pizza', 'Meatzza', 'Spicy Mama', 'Margherita'</span></code></pre></div>\n<p>With spread operator, Shallow-cloning (excluding prototype) or merging of objects is now possible using a shorter syntax than Object.assign().</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascriptjavascript\"><code class=\"language-javascriptjavascript\"><span class=\"token keyword\">var</span> obj1 <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> foo<span class=\"token punctuation\">:</span> <span class=\"token string\">'bar'</span><span class=\"token punctuation\">,</span> x<span class=\"token punctuation\">:</span> <span class=\"token number\">42</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> obj2 <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> foo<span class=\"token punctuation\">:</span> <span class=\"token string\">'baz'</span><span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">:</span> <span class=\"token number\">13</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">var</span> clonedObj <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> <span class=\"token operator\">...</span>obj1 <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// Object { foo: \"bar\", x: 42 }</span>\n\n<span class=\"token keyword\">var</span> mergedObj <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> <span class=\"token operator\">...</span>obj1<span class=\"token punctuation\">,</span> <span class=\"token operator\">...</span>obj2 <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// Object { foo: \"baz\", x: 42, y: 13 }</span></code></pre></div>","frontmatter":{"title":"Three dots ( â€¦ ) in JavaScript"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/Three-dots-(â€¦)-in-JavaScript/"}}}