{"version":3,"sources":["webpack:///./src/pages/index.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/components/body/layout.js","webpack:///./.cache/public-page-renderer-prod.js"],"names":["__webpack_require__","r","__webpack_exports__","d","query","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","antd__WEBPACK_IMPORTED_MODULE_1__","_components_body_layout__WEBPACK_IMPORTED_MODULE_2__","gatsby__WEBPACK_IMPORTED_MODULE_3__","_ref","data","a","createElement","style","fontSize","allMarkdownRemark","edges","map","_ref2","index","node","key","to","fields","slug","frontmatter","title","display","color","textAlign","date","className","tags","item","excerpt","m","module","exports","require","default","StaticQuery","gatsby_link__WEBPACK_IMPORTED_MODULE_1__","gatsby_link__WEBPACK_IMPORTED_MODULE_1___default","loader","enqueue","StaticQueryContext","React","createContext","StaticQueryDataRenderer","staticQueryData","render","finalData","Fragment","props","children","Consumer","Header","Layout","Content","Sider","antIcon","react__WEBPACK_IMPORTED_MODULE_1___default","antd__WEBPACK_IMPORTED_MODULE_4__","type","spin","IndexPage","_this","_PureComponent","call","this","state","hidden","componentDidMount","_this2","setTimeout","setState","antd__WEBPACK_IMPORTED_MODULE_5__","indicator","tip","gatsby__WEBPACK_IMPORTED_MODULE_2__","antd__WEBPACK_IMPORTED_MODULE_3__","background","padding","_public_static_d_61684770_json__WEBPACK_IMPORTED_MODULE_0__","PureComponent","ProdPageRenderer","location","pageResources","InternalPageRenderer","Object","assign","json"],"mappings":"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","file":"component---src-pages-index-js-a550455f3d7cd74856e3.js","sourcesContent":["import React from \"react\";\r\nimport { Tag } from 'antd';\r\nimport Layout from \"../components/body/layout\";\r\nimport { graphql, Link } from \"gatsby\";\r\nimport './pages.css';\r\n\r\nexport default ({ data }) => {\r\n\treturn (\r\n\t\t<Layout>\r\n\t\t\t<h1 style={{fontSize: '2em'}}>New Post</h1>\r\n\t\t\t{data.allMarkdownRemark.edges.map(({ node }, index) =>\r\n\t\t\t\t<div key={index}>\r\n\t\t\t\t\t<h3>\r\n\t\t\t\t\t\t<Link to={node.fields.slug}>{node.frontmatter.title}</Link>\r\n\t\t\t\t\t</h3>\r\n\t\t\t\t\t<div style={{ display: 'grid' }}>\r\n\t\t\t\t\t\t<span style={{ color: `#BBB`, fontSize: '14px', textAlign: 'right' }}\r\n\t\t\t\t\t\t> Created date: {node.frontmatter.date}\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t<div className=\"tag-cus\">\r\n\t\t\t\t\t\t\t{node.frontmatter.tags.map((item, index) =>\r\n\t\t\t\t\t\t\t\t// <ul className=\"tags\" key={index}>\r\n\t\t\t\t\t\t\t\t// \t<li><span className=\"tag\">{item}</span></li>\r\n\t\t\t\t\t\t\t\t// </ul>\r\n\t\t\t\t\t\t\t\t<Tag color=\"magenta\"> {item}</Tag>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<p>{node.excerpt}</p>\r\n\t\t\t\t</div>\r\n\t\t\t)}\r\n\t\t</Layout>\r\n\t)\r\n}\r\n\r\nexport const query = graphql`\r\n  query {\r\n    allMarkdownRemark(\r\n        sort: {order: DESC, fields: [frontmatter___date] }\r\n        limit: 1000\r\n      ) {\r\n      edges {\r\n        node {\r\n          frontmatter {\r\n            title\r\n            date(formatString: \"DD/MM/YYYY\")\r\n            tags\r\n          }\r\n          excerpt\r\n          fields {\r\n            slug\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport loader from \"./loader\"\n\nconst prefetchPathname = loader.enqueue\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n  prefetchPathname,\n}\n","/* Import lib */\r\nimport React, { PureComponent } from \"react\";\r\nimport { StaticQuery, graphql } from \"gatsby\";\r\nimport { Layout, Spin, Icon } from 'antd';\r\n/* Import css */\r\nimport \"./layout.css\";\r\nimport \"./antd.css\";\r\nimport \"./beautiCode.css\";\r\n/*declare variable */\r\nconst { Header, Content, Sider } = Layout;\r\nconst antIcon = <Icon type=\"loading\" style={{ fontSize: 24 }} spin />;\r\n\r\nclass IndexPage extends PureComponent {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { hidden: true };\r\n  }\r\n  componentDidMount() {\r\n    setTimeout(() => {\r\n      this.setState({ hidden: false });\r\n    }, 700);\r\n  }\r\n\r\n  render() {\r\n    const { children } = this.props;\r\n    return (\r\n      this.state.hidden ? <div\r\n        className=\"center-hello\">\r\n        <Spin indicator={antIcon} tip=\"Tai Pham\" />\r\n      </div> :\r\n        <StaticQuery\r\n          query={graphql`\r\n      query {\r\n        site {\r\n          siteMetadata {\r\n            title\r\n          }\r\n        },\r\n        topics: allMarkdownRemark(sort: {order: DESC, fields: [frontmatter___date] }) {\r\n          edges {\r\n            node {\r\n              frontmatter {\r\n                categories\r\n                tags\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    `}\r\n          render={data => (\r\n            <Layout style={{\r\n              fontSize: 20,\r\n              background: 'rgb(181, 2, 93)'\r\n            }}>\r\n              <Header style={{ background: 'none' }}>\r\n                <div className=\"logo\" />\r\n              </Header>\r\n              <Layout>\r\n                <Sider className=\"sider-cus\">\r\n                </Sider>\r\n                <Layout style={{\r\n                  padding: '10px 0 40px 0',\r\n                }}>\r\n                  <Content className=\"content-cus\">\r\n                    {children}\r\n                  </Content>\r\n                </Layout>\r\n                <Sider className=\"sider-cus\">\r\n                </Sider>\r\n              </Layout>\r\n            </Layout>\r\n          )}\r\n        />\r\n    )\r\n  }\r\n}\r\n\r\nexport default IndexPage;","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n"],"sourceRoot":""}