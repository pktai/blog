{"version":3,"sources":["webpack:///./src/templates/categories.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/components/body/layout.js","webpack:///./.cache/public-page-renderer-prod.js"],"names":["data","category","pageContext","categoryEdges","allMarkdownRemark","edges","filter","node","frontmatter","categories","includes","map","index","key","to","fields","slug","title","style","color","date","excerpt","query","m","module","exports","require","default","loader","enqueue","StaticQueryContext","React","createContext","StaticQueryDataRenderer","staticQueryData","render","finalData","Fragment","StaticQuery","props","children","Consumer","Layout","this","className","href","PureComponent","ProdPageRenderer","location","pageResources","createElement","InternalPageRenderer","json"],"mappings":"yLAIe,sBAA4B,IAAzBA,EAAwB,EAAxBA,KACRC,EADgC,EAAlBC,YACdD,SACFE,EAAgBH,EAAKI,kBAAkBC,MAAMC,OAAO,qBAAEC,KAAeC,YAAYC,WAAWC,SAAST,KAE3G,OACE,kBAAC,IAAD,KACE,0CAAgBA,GAEfE,EAAcQ,IAAI,WAAWC,GAAX,IAAGL,EAAH,EAAGA,KAAH,OACjB,yBAAKM,IAAKD,GACR,4BACE,kBAAC,IAAD,CAAME,GAAIP,EAAKQ,OAAOC,MAAOT,EAAKC,YAAYS,QAEhD,0BAAMC,MAAO,CAAEC,MAAM,SAArB,KAAmCZ,EAAKC,YAAYY,MACpD,2BAAIb,EAAKc,cAOZ,IAAMC,EAAK,c,oBCzBlB,IAAsBC,EAKpBC,EAAOC,SALaF,EAKWG,EAAQ,OALRH,EAAEI,SAAYJ,G,iCCA/C,mHAcyBK,QAAOC,QAdhC,IAgBMC,EAAqBC,IAAMC,cAAc,IAE/C,SAASC,EAAT,GAA4E,IAAzCC,EAAwC,EAAxCA,gBAAiBlC,EAAuB,EAAvBA,KAAMsB,EAAiB,EAAjBA,MAAOa,EAAU,EAAVA,OACzDC,EAAYpC,EACdA,EAAKA,KACLkC,EAAgBZ,IAAUY,EAAgBZ,GAAOtB,KAErD,OACE,kBAAC,IAAMqC,SAAP,KACGD,GAAaD,EAAOC,IACnBA,GAAa,uDAKrB,IAAME,EAAc,SAAAC,GAAU,IACpBvC,EAAkCuC,EAAlCvC,KAAMsB,EAA4BiB,EAA5BjB,MAAOa,EAAqBI,EAArBJ,OAAQK,EAAaD,EAAbC,SAE7B,OACE,kBAACV,EAAmBW,SAApB,KACG,SAAAP,GAAe,OACd,kBAACD,EAAD,CACEjC,KAAMA,EACNsB,MAAOA,EACPa,OAAQA,GAAUK,EAClBN,gBAAiBA,Q,yFCjCrBQ,E,oBACJ,aAAuB,IAAD,uBAAPH,EAAO,yBAAPA,EAAO,uBACpB,6BAASA,KADW,K,0GAItBJ,OAAA,WAAU,IACAK,EAAaG,KAAKJ,MAAlBC,SACR,OACE,kBAAC,IAAD,CACElB,MAAK,aAsBLa,OAAQ,SAAAnC,GAAI,OACV,oCACE,4BAAQ4C,UAAU,iBAChB,yBAAKA,UAAU,mBACb,yBAAKA,UAAU,QACb,yBAAKA,UAAU,aAAf,cACA,yBAAKA,UAAU,aAAf,YAEF,yBAAKA,UAAU,aACf,yBAAKA,UAAU,eAGf,yBAAKA,UAAU,qBASnB,6BAASA,UAAU,aACjB,yBAAKA,UAAU,mBAEb,yBAAKA,UAAU,SAASJ,KAI5B,6BAASI,UAAU,YACjB,yBAAKA,UAAU,mBACb,wBAAIA,UAAU,aAAd,cAEA,yBAAKA,UAAU,UACb,yBAAKA,UAAU,SACb,yBAAKA,UAAU,iBACf,yBAEEA,UAAU,iBAEZ,yBAAKA,UAAU,cACb,yBAAKA,UAAU,cAAf,YACA,yBAAKA,UAAU,cAAf,yBACA,yBAAKA,UAAU,cAAf,+BAQF,yBAAKA,UAAU,cACb,uBACEC,KAAK,qCACLD,UAAU,cAFZ,KAMA,0BAAMA,UAAU,cAAhB,KACA,0BAAMA,UAAU,cAAhB,WAOV,4BAAQA,UAAU,gBAChB,yBAAKA,UAAU,mBACb,yBAAKA,UAAU,oBACb,yBAAKA,UAAU,cACb,yBAAKA,UAAU,gBAKrB,yBAAKA,UAAU,aACb,yBAAKA,UAAU,mBACb,yBAAKA,UAAU,aAAf,0BACA,yBAAKA,UAAU,oBAAf,kCAGA,yBAAKA,UAAU,kBAvG3B,U,GAReE,iBA0HNJ,O,olDC5GAK,UAjBU,SAAC,GAAiC,IAA/BC,EAA8B,EAA9BA,SAAUC,EAAoB,EAApBA,cACpC,OAAKA,EAGElB,IAAMmB,cAAcC,IAApB,eACLH,WACAC,iBACGA,EAAcG,OALV","file":"component---src-templates-categories-js-ffea9059536b354dd06f.js","sourcesContent":["import React from \"react\";\r\nimport Layout from \"../components/body/layout\";\r\nimport { graphql, Link } from \"gatsby\";\r\n\r\nexport default ({ data, pageContext }) => {\r\n  const { category } = pageContext;\r\n  const categoryEdges = data.allMarkdownRemark.edges.filter(({node}) => node.frontmatter.categories.includes(category));\r\n\r\n  return (\r\n    <Layout>\r\n      <h1>Chuyên mục {category}</h1>\r\n\r\n      {categoryEdges.map(({ node }, index) => \r\n        <div key={index}>\r\n          <h3>\r\n            <Link to={node.fields.slug}>{node.frontmatter.title}</Link>\r\n          </h3>\r\n          <span style={{ color: `#BBB` }}>— {node.frontmatter.date}</span>\r\n          <p>{node.excerpt}</p>\r\n        </div>\r\n      )}\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport const query = graphql`\r\n  query {\r\n    allMarkdownRemark(\r\n        sort: {order: DESC, fields: [frontmatter___date] }\r\n        limit: 1000\r\n      ) {\r\n      edges {\r\n        node {\r\n          frontmatter {\r\n            title\r\n            date(formatString: \"DD/MM/YYYY\")\r\n            categories\r\n          }\r\n          excerpt\r\n          fields {\r\n            slug\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport loader from \"./loader\"\n\nconst prefetchPathname = loader.enqueue\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n  prefetchPathname,\n}\n","/* Import lib */\r\nimport React, { PureComponent } from \"react\";\r\nimport { StaticQuery, graphql } from \"gatsby\";\r\n\r\n/* Import css */\r\nimport \"./layout.css\";\r\nimport \"./formatFormLanguage.css\";\r\n\r\nclass Layout extends PureComponent {\r\n  constructor(...props) {\r\n    super(...props);\r\n  }\r\n\r\n  render() {\r\n    const { children } = this.props;\r\n    return (\r\n      <StaticQuery\r\n        query={graphql`\r\n          query {\r\n            site {\r\n              siteMetadata {\r\n                title\r\n              }\r\n            }\r\n\r\n            topics: allMarkdownRemark(\r\n              sort: { order: DESC, fields: [frontmatter___date] }\r\n            ) {\r\n              edges {\r\n                node {\r\n                  frontmatter {\r\n                    categories\r\n                    tags\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n        `}\r\n        render={data => (\r\n          <>\r\n            <header className=\"header-banner\">\r\n              <div className=\"container-width\">\r\n                <nav className=\"menu\">\r\n                  <div className=\"menu-item\">JAVASCRIPT</div>\r\n                  <div className=\"menu-item\">ENGLISH</div>\r\n                </nav>\r\n                <div className=\"clearfix\" />\r\n                <div className=\"lead-title\">\r\n                  {/* Build your templates without coding */}\r\n                </div>\r\n                <div className=\"sub-lead-title\">\r\n                  {/* All text blocks could be edited easily with double clicking on\r\n                  it. You can create new text blocks with the command from the\r\n                  left panel */}\r\n                </div>\r\n                {/* <div className=\"lead-btn\"></div> */}\r\n              </div>\r\n            </header>\r\n\r\n            <section className=\"flex-sect\">\r\n              <div className=\"container-width\">\r\n                {/* <div className=\"flex-title\">New Feed</div> */}\r\n                <div className=\"cards\">{children}</div>\r\n              </div>\r\n            </section>\r\n\r\n            <section className=\"bdg-sect\">\r\n              <div className=\"container-width\">\r\n                <h1 className=\"bdg-title\">Creator by</h1>\r\n\r\n                <div className=\"badges\">\r\n                  <div className=\"badge\">\r\n                    <div className=\"badge-header\" />\r\n                    <img\r\n                      // src=\"/src/images/TaiPham.jpg\"\r\n                      className=\"badge-avatar\"\r\n                    />\r\n                    <div className=\"badge-body\">\r\n                      <div className=\"badge-name\">Tai Pham</div>\r\n                      <div className=\"badge-role\">Full Stack Javascript</div>\r\n                      <div className=\"badge-desc\">\r\n                        {/* Lorem ipsum dolor sit amet, consectetur adipiscing elit,\r\n                        sed do eiusmod tempor incididunt ut labore ipsum dolor\r\n\t\t\t\t\t\t\t\t\t\t\t\tsit */}\r\n                        Success = Present + Effort\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div className=\"badge-foot\">\r\n                      <a\r\n                        href=\"https://www.facebook.com/pktai.IoT\"\r\n                        className=\"badge-link\"\r\n                      >\r\n                        f\r\n                      </a>\r\n                      <span className=\"badge-link\">t</span>\r\n                      <span className=\"badge-link\">ln</span>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </section>\r\n\r\n            <footer className=\"footer-under\">\r\n              <div className=\"container-width\">\r\n                <div className=\"footer-container\">\r\n                  <div className=\"foot-lists\">\r\n                    <div className=\"clearfix\" />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"copyright\">\r\n                <div className=\"container-width\">\r\n                  <div className=\"made-with\">Made By Tai Pham @2019</div>\r\n                  <div className=\"foot-social-btns\">\r\n                    facebook twitter linkedin mail\r\n                  </div>\r\n                  <div className=\"clearfix\" />\r\n                </div>\r\n              </div>\r\n            </footer>\r\n          </>\r\n        )}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default Layout;\r\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n"],"sourceRoot":""}