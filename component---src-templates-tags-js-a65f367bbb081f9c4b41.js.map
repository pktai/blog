{"version":3,"sources":["webpack:///./src/templates/tags.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/components/body/layout.js","webpack:///./.cache/public-page-renderer-prod.js"],"names":["__webpack_exports__","_ref","data","tag","pageContext","tagEdges","allMarkdownRemark","edges","filter","_ref2","node","frontmatter","tags","includes","react__WEBPACK_IMPORTED_MODULE_2___default","a","createElement","_components_body_layout__WEBPACK_IMPORTED_MODULE_3__","map","_ref3","index","key","gatsby__WEBPACK_IMPORTED_MODULE_4__","to","fields","slug","title","style","color","date","excerpt","query","m","module","exports","require","default","__webpack_require__","d","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","gatsby_link__WEBPACK_IMPORTED_MODULE_1__","gatsby_link__WEBPACK_IMPORTED_MODULE_1___default","loader","enqueue","StaticQueryContext","React","createContext","StaticQueryDataRenderer","staticQueryData","render","finalData","Fragment","props","children","Consumer","Content","Layout","antIcon","react__WEBPACK_IMPORTED_MODULE_1___default","antd__WEBPACK_IMPORTED_MODULE_4__","type","fontSize","spin","IndexPage","_this","_PureComponent","call","this","state","hidden","componentDidMount","_this2","setTimeout","setState","_this3","className","antd__WEBPACK_IMPORTED_MODULE_5__","indicator","tip","gatsby__WEBPACK_IMPORTED_MODULE_2__","antd__WEBPACK_IMPORTED_MODULE_3__","background","display","padding","boxShadow","antd__WEBPACK_IMPORTED_MODULE_6__","onClick","handleClick","selectedKeys","current","mode","Item","_public_static_d_3570013434_json__WEBPACK_IMPORTED_MODULE_0__","PureComponent","ProdPageRenderer","location","pageResources","InternalPageRenderer","Object","assign","json"],"mappings":"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","file":"component---src-templates-tags-js-a65f367bbb081f9c4b41.js","sourcesContent":["import React from \"react\";\r\nimport Layout from \"../components/body/layout\";\r\nimport { graphql, Link } from \"gatsby\";\r\n\r\nexport default ({ data, pageContext }) => {\r\n  const { tag } = pageContext;\r\n  const tagEdges = data.allMarkdownRemark.edges.filter(({node}) => node.frontmatter.tags.includes(tag));\r\n\r\n  return (\r\n    <Layout>\r\n      <h1>Thẻ {tag}</h1>\r\n\r\n      {tagEdges.map(({ node }, index) => \r\n        <div key={index}>\r\n          <h3>\r\n            <Link to={node.fields.slug}>{node.frontmatter.title}</Link>\r\n          </h3>\r\n          <span style={{ color: `#BBB` }}>— {node.frontmatter.date}</span>\r\n          <p>{node.excerpt}</p>\r\n        </div>\r\n      )}\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport const query = graphql`\r\n  query {\r\n    allMarkdownRemark(\r\n        sort: {order: DESC, fields: [frontmatter___date] }\r\n        limit: 1000\r\n      ) {\r\n      edges {\r\n        node {\r\n          frontmatter {\r\n            title\r\n            date(formatString: \"DD/MM/YYYY\")\r\n            tags\r\n          }\r\n          excerpt\r\n          fields {\r\n            slug\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport loader from \"./loader\"\n\nconst prefetchPathname = loader.enqueue\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n  prefetchPathname,\n}\n","/* Import lib */\r\nimport React, { PureComponent } from \"react\";\r\nimport { StaticQuery, graphql } from \"gatsby\";\r\nimport { Layout, Spin, Icon, Menu } from \"antd\";\r\n/* Import css */\r\nimport \"./layout.css\";\r\nimport \"./antd.css\";\r\nimport \"./beautiCode.css\";\r\n/*declare variable */\r\nconst { Content } = Layout;\r\nconst antIcon = <Icon type=\"loading\" style={{ fontSize: 24 }} spin />;\r\n\r\nclass IndexPage extends PureComponent {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { hidden: true };\r\n  }\r\n  componentDidMount() {\r\n    setTimeout(() => {\r\n      this.setState({ hidden: false });\r\n    }, 700);\r\n  }\r\n\r\n  render() {\r\n    const { children } = this.props;\r\n    return this.state.hidden ? (\r\n      <div className=\"center-hello\">\r\n        <Spin indicator={antIcon} tip=\"Tai Pham\" />\r\n      </div>\r\n    ) : (\r\n        <StaticQuery\r\n          query={graphql`\r\n          query {\r\n            site {\r\n              siteMetadata {\r\n                title\r\n              }\r\n            }\r\n            topics: allMarkdownRemark(\r\n              sort: { order: DESC, fields: [frontmatter___date] }\r\n            ) {\r\n              edges {\r\n                node {\r\n                  frontmatter {\r\n                    categories\r\n                    tags\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n        `}\r\n          render={data => (\r\n            <Layout\r\n              style={{\r\n                fontSize: 20,\r\n                background: \"#ffffff\"\r\n              }}\r\n            >\r\n              {/* <Header style={{ background: 'none' }}>\r\n                <div className=\"logo\" />\r\n              </Header> */}\r\n              <Layout style={{ display: \"-webkit-box\" }}>\r\n                <div className=\"sider-cus\"></div>\r\n                <Layout\r\n                  style={{\r\n                    padding: \"0 0 40px 0\",\r\n                    boxShadow: \"0 0 11px rgba(33,33,33,.2)\"\r\n                  }}\r\n                >\r\n                  <Menu\r\n                    onClick={this.handleClick}\r\n                    selectedKeys={[this.state.current]}\r\n                    mode=\"horizontal\"\r\n                  >\r\n                    <Menu.Item key=\"mail\">\r\n                      <Icon type=\"mail\" />\r\n                      Javascript\r\n                  </Menu.Item>\r\n                    <Menu.Item key=\"app\">\r\n                      <Icon type=\"appstore\" />\r\n                      ReactJS\r\n                  </Menu.Item>\r\n                    <Menu.Item key=\"alipay\">\r\n                        Libary\r\n                    </Menu.Item>\r\n                  </Menu>\r\n\r\n                  <Content className=\"content-cus\">{children}</Content>\r\n                </Layout>\r\n                <div className=\"sider-cus\"></div>\r\n              </Layout>\r\n            </Layout>\r\n          )}\r\n        />\r\n      );\r\n  }\r\n}\r\n\r\nexport default IndexPage;\r\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n"],"sourceRoot":""}